version: "3.8"

services:
  glassfish:
    image: ghcr.io/eclipse-ee4j/glassfish:7.0.23
    container_name: glassfish_server
    ports:
      - "8080:8080" # HTTP port
      - "4848:4848" # Admin console port
    volumes:
      # Mount the wallet directory
      - ./wallet:/opt/glassfish7/glassfish/domains/domain1/config/wallet
      # Mount the WAR file at a temporary location for copying
      - ./target/nimblev5-1.0-SNAPSHOT.war:/tmp/nimblev5-1.0-SNAPSHOT.war:ro
      # Mount the ojdbc drivers - initially to a temporary location
      - ./ojdbc10-full:/opt/glassfish7/glassfish/lib/ojdbc:ro
      # Mount a local directory to capture command logs
      - ./container_logs:/opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs
    # Command to:
    # 1. Copy necessary ojdbc drivers
    # 2. Set proper permissions on domain directory
    # 3. Start the domain in the background
    # 4. Wait for the domain to fully start
    # 5. Create the JDBC connection pool and resources
    # 6. Deploy the application using autodeploy only
    # 7. Tail the server log
    command: >
      bash -c "cp /opt/glassfish7/glassfish/lib/ojdbc/ojdbc10.jar /opt/glassfish7/glassfish/domains/domain1/lib/ && \
               cp /opt/glassfish7/glassfish/lib/ojdbc/oraclepki.jar /opt/glassfish7/glassfish/domains/domain1/lib/ && \
               cp /opt/glassfish7/glassfish/lib/ojdbc/osdt_core.jar /opt/glassfish7/glassfish/domains/domain1/lib/ && \
               cp /opt/glassfish7/glassfish/lib/ojdbc/osdt_cert.jar /opt/glassfish7/glassfish/domains/domain1/lib/ && \
               echo 'Setting proper permissions on entire domain directory...' && \
               chmod -R 777 /opt/glassfish7/glassfish/domains/domain1 && \
               echo 'Starting domain in background...' && \
               /opt/glassfish7/glassfish/bin/asadmin start-domain domain1 & \
               PID=$! && \
               echo 'Waiting 30 seconds for domain to start...' && sleep 30 && \
               mkdir -p /opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs && \
               echo 'Creating JDBC Connection Pool NimbleDBPool... logging to cmd_logs/pool_creation.log' && \
               /opt/glassfish7/glassfish/bin/asadmin create-jdbc-connection-pool --datasourceclassname oracle.jdbc.pool.OracleDataSource --restype javax.sql.DataSource --property \"URL='jdbc:oracle:thin:@nimbledb_high?TNS_ADMIN=/opt/glassfish7/glassfish/domains/domain1/config/wallet':User=ADMIN:Password='Hastael125687':oracle.net.wallet_location='/opt/glassfish7/glassfish/domains/domain1/config/wallet':ssl=true:MaxStatements=0:ImplicitCachingEnabled=false:NetworkProtocol=tcp:DataSourceName=OracleDataSource:LoginTimeout=0:PortNumber=0:ExplicitCachingEnabled=false\" NimbleDBPool > /opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs/pool_creation.log 2>&1 && \
               echo 'Creating JDBC Resource jdbc/NimbleDS... logging to cmd_logs/resource1_creation.log' && \
               /opt/glassfish7/glassfish/bin/asadmin create-jdbc-resource --connectionpoolid NimbleDBPool jdbc/NimbleDS > /opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs/resource1_creation.log 2>&1 && \
               echo 'Creating JDBC Resource NimbleDS... logging to cmd_logs/resource2_creation.log' && \
               /opt/glassfish7/glassfish/bin/asadmin create-jdbc-resource --connectionpoolid NimbleDBPool NimbleDS > /opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs/resource2_creation.log 2>&1 && \
               echo 'Copying WAR file to autodeploy directory...' && \
               cp /tmp/nimblev5-1.0-SNAPSHOT.war /opt/glassfish7/glassfish/domains/domain1/autodeploy/ && \
               chmod 777 /opt/glassfish7/glassfish/domains/domain1/autodeploy/nimblev5-1.0-SNAPSHOT.war && \
               echo 'Waiting 20 seconds for autodeploy to process WAR file...' && \
               sleep 20 && \
               echo 'Checking autodeploy results...' && \
               ls -la /opt/glassfish7/glassfish/domains/domain1/autodeploy/ > /opt/glassfish7/glassfish/domains/domain1/logs/cmd_logs/autodeploy_dir.log 2>&1 && \
               echo 'Configuration complete. Tailing server log...' && \
               fg || tail -f /opt/glassfish7/glassfish/domains/domain1/logs/server.log" # Bring background process to fg or tail log if needed
